// This file was generated by counterfeiter
package fakes

import (
	"sync"

	. "github.com/cloudfoundry/cli/cf/i18n/detection"
)

type FakeDetector struct {
	DetectIETFStub        func() (string, error)
	detectIETFMutex       sync.RWMutex
	detectIETFArgsForCall []struct{}
	detectIETFReturns     struct {
		result1 string
		result2 error
	}
	DetectLanguageStub        func() (string, error)
	detectLanguageMutex       sync.RWMutex
	detectLanguageArgsForCall []struct{}
	detectLanguageReturns     struct {
		result1 string
		result2 error
	}
}

func (fake *FakeDetector) DetectIETF() (string, error) {
	fake.detectIETFMutex.Lock()
	defer fake.detectIETFMutex.Unlock()
	fake.detectIETFArgsForCall = append(fake.detectIETFArgsForCall, struct{}{})
	if fake.DetectIETFStub != nil {
		return fake.DetectIETFStub()
	} else {
		return fake.detectIETFReturns.result1, fake.detectIETFReturns.result2
	}
}

func (fake *FakeDetector) DetectIETFCallCount() int {
	fake.detectIETFMutex.RLock()
	defer fake.detectIETFMutex.RUnlock()
	return len(fake.detectIETFArgsForCall)
}

func (fake *FakeDetector) DetectIETFReturns(result1 string, result2 error) {
	fake.detectIETFReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

func (fake *FakeDetector) DetectLanguage() (string, error) {
	fake.detectLanguageMutex.Lock()
	defer fake.detectLanguageMutex.Unlock()
	fake.detectLanguageArgsForCall = append(fake.detectLanguageArgsForCall, struct{}{})
	if fake.DetectLanguageStub != nil {
		return fake.DetectLanguageStub()
	} else {
		return fake.detectLanguageReturns.result1, fake.detectLanguageReturns.result2
	}
}

func (fake *FakeDetector) DetectLanguageCallCount() int {
	fake.detectLanguageMutex.RLock()
	defer fake.detectLanguageMutex.RUnlock()
	return len(fake.detectLanguageArgsForCall)
}

func (fake *FakeDetector) DetectLanguageReturns(result1 string, result2 error) {
	fake.detectLanguageReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ Detector = new(FakeDetector)
